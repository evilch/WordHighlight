//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_CategoryTag_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.Category), "CategoryTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.CategoryTag), true)]
[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_StoryCategory_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.Category), "StoryCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.StoryCategory), true)]
[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_CategoryTag_Tag", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.Tag), "CategoryTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.CategoryTag), true)]
[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_Content_ContentType", "ContentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.ContentType), "Content", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.Content), true)]
[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_Content_Story", "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.Story), "Content", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.Content), true)]
[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_KeyWord_KeyWordGroup", "KeyWordGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.KeyWordGroup), "KeyWord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.KeyWord), true)]
[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_KeyWord_Style", "Style", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.Style), "KeyWord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.KeyWord), true)]
[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_StoryKeyWord_KeyWord", "KeyWord", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.KeyWord), "StoryKeyWord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.StoryKeyWord), true)]
[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_StoryCategory_Story", "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.Story), "StoryCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.StoryCategory), true)]
[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_StoryKeyWord_Story", "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.Story), "StoryKeyWord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.StoryKeyWord), true)]
[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_StoryTag_Story", "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.Story), "StoryTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.StoryTag), true)]
[assembly: EdmRelationshipAttribute("StoryDBModel", "fk_StoryTag_Tag", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EvilchUtil.WordHighlight.Entity.Tag), "StoryTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EvilchUtil.WordHighlight.Entity.StoryTag), true)]

#endregion

namespace EvilchUtil.WordHighlight.Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class StoryDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new StoryDBEntities object using the connection string found in the 'StoryDBEntities' section of the application configuration file.
        /// </summary>
        public StoryDBEntities() : base("name=StoryDBEntities", "StoryDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StoryDBEntities object.
        /// </summary>
        public StoryDBEntities(string connectionString) : base(connectionString, "StoryDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StoryDBEntities object.
        /// </summary>
        public StoryDBEntities(EntityConnection connection) : base(connection, "StoryDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryTag> CategoryTags
        {
            get
            {
                if ((_CategoryTags == null))
                {
                    _CategoryTags = base.CreateObjectSet<CategoryTag>("CategoryTags");
                }
                return _CategoryTags;
            }
        }
        private ObjectSet<CategoryTag> _CategoryTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Content> Contents
        {
            get
            {
                if ((_Contents == null))
                {
                    _Contents = base.CreateObjectSet<Content>("Contents");
                }
                return _Contents;
            }
        }
        private ObjectSet<Content> _Contents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentType> ContentTypes
        {
            get
            {
                if ((_ContentTypes == null))
                {
                    _ContentTypes = base.CreateObjectSet<ContentType>("ContentTypes");
                }
                return _ContentTypes;
            }
        }
        private ObjectSet<ContentType> _ContentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<KeyWord> KeyWords
        {
            get
            {
                if ((_KeyWords == null))
                {
                    _KeyWords = base.CreateObjectSet<KeyWord>("KeyWords");
                }
                return _KeyWords;
            }
        }
        private ObjectSet<KeyWord> _KeyWords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<KeyWordGroup> KeyWordGroups
        {
            get
            {
                if ((_KeyWordGroups == null))
                {
                    _KeyWordGroups = base.CreateObjectSet<KeyWordGroup>("KeyWordGroups");
                }
                return _KeyWordGroups;
            }
        }
        private ObjectSet<KeyWordGroup> _KeyWordGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Story> Stories
        {
            get
            {
                if ((_Stories == null))
                {
                    _Stories = base.CreateObjectSet<Story>("Stories");
                }
                return _Stories;
            }
        }
        private ObjectSet<Story> _Stories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoryCategory> StoryCategories
        {
            get
            {
                if ((_StoryCategories == null))
                {
                    _StoryCategories = base.CreateObjectSet<StoryCategory>("StoryCategories");
                }
                return _StoryCategories;
            }
        }
        private ObjectSet<StoryCategory> _StoryCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoryKeyWord> StoryKeyWords
        {
            get
            {
                if ((_StoryKeyWords == null))
                {
                    _StoryKeyWords = base.CreateObjectSet<StoryKeyWord>("StoryKeyWords");
                }
                return _StoryKeyWords;
            }
        }
        private ObjectSet<StoryKeyWord> _StoryKeyWords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoryTag> StoryTags
        {
            get
            {
                if ((_StoryTags == null))
                {
                    _StoryTags = base.CreateObjectSet<StoryTag>("StoryTags");
                }
                return _StoryTags;
            }
        }
        private ObjectSet<StoryTag> _StoryTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Style> Styles
        {
            get
            {
                if ((_Styles == null))
                {
                    _Styles = base.CreateObjectSet<Style>("Styles");
                }
                return _Styles;
            }
        }
        private ObjectSet<Style> _Styles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryTags(CategoryTag categoryTag)
        {
            base.AddObject("CategoryTags", categoryTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContents(Content content)
        {
            base.AddObject("Contents", content);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentTypes(ContentType contentType)
        {
            base.AddObject("ContentTypes", contentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the KeyWords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKeyWords(KeyWord keyWord)
        {
            base.AddObject("KeyWords", keyWord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the KeyWordGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKeyWordGroups(KeyWordGroup keyWordGroup)
        {
            base.AddObject("KeyWordGroups", keyWordGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStories(Story story)
        {
            base.AddObject("Stories", story);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoryCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoryCategories(StoryCategory storyCategory)
        {
            base.AddObject("StoryCategories", storyCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoryKeyWords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoryKeyWords(StoryKeyWord storyKeyWord)
        {
            base.AddObject("StoryKeyWords", storyKeyWord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoryTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoryTags(StoryTag storyTag)
        {
            base.AddObject("StoryTags", storyTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Styles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStyles(Style style)
        {
            base.AddObject("Styles", style);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="updateBy">Initial value of the UpdateBy property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="createBy">Initial value of the CreateBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId, global::System.String categoryName, global::System.String updateBy, global::System.DateTime updateDate, global::System.String createBy, global::System.DateTime createDate)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            category.CategoryName = categoryName;
            category.UpdateBy = updateBy;
            category.UpdateDate = updateDate;
            category.CreateBy = createBy;
            category.CreateDate = createDate;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentCategoryId
        {
            get
            {
                return _ParentCategoryId;
            }
            set
            {
                OnParentCategoryIdChanging(value);
                ReportPropertyChanging("ParentCategoryId");
                _ParentCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentCategoryId");
                OnParentCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentCategoryId;
        partial void OnParentCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private global::System.String _UpdateBy;
        partial void OnUpdateByChanging(global::System.String value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_CategoryTag_Category", "CategoryTag")]
        public EntityCollection<CategoryTag> CategoryTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryTag>("StoryDBModel.fk_CategoryTag_Category", "CategoryTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryTag>("StoryDBModel.fk_CategoryTag_Category", "CategoryTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryCategory_Category", "StoryCategory")]
        public EntityCollection<StoryCategory> StoryCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoryCategory>("StoryDBModel.fk_StoryCategory_Category", "StoryCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoryCategory>("StoryDBModel.fk_StoryCategory_Category", "StoryCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="CategoryTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryTag object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="tagCode">Initial value of the TagCode property.</param>
        /// <param name="createBy">Initial value of the CreateBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static CategoryTag CreateCategoryTag(global::System.Int32 categoryId, global::System.String tagCode, global::System.String createBy, global::System.DateTime createDate)
        {
            CategoryTag categoryTag = new CategoryTag();
            categoryTag.CategoryId = categoryId;
            categoryTag.TagCode = tagCode;
            categoryTag.CreateBy = createBy;
            categoryTag.CreateDate = createDate;
            return categoryTag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagCode
        {
            get
            {
                return _TagCode;
            }
            set
            {
                if (_TagCode != value)
                {
                    OnTagCodeChanging(value);
                    ReportPropertyChanging("TagCode");
                    _TagCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TagCode");
                    OnTagCodeChanged();
                }
            }
        }
        private global::System.String _TagCode;
        partial void OnTagCodeChanging(global::System.String value);
        partial void OnTagCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_CategoryTag_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("StoryDBModel.fk_CategoryTag_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("StoryDBModel.fk_CategoryTag_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("StoryDBModel.fk_CategoryTag_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("StoryDBModel.fk_CategoryTag_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_CategoryTag_Tag", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("StoryDBModel.fk_CategoryTag_Tag", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("StoryDBModel.fk_CategoryTag_Tag", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("StoryDBModel.fk_CategoryTag_Tag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("StoryDBModel.fk_CategoryTag_Tag", "Tag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="Content")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Content : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Content object.
        /// </summary>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="contentTypeId">Initial value of the ContentTypeId property.</param>
        /// <param name="contentData">Initial value of the ContentData property.</param>
        public static Content CreateContent(global::System.Int32 storyId, global::System.Int32 contentTypeId, global::System.Byte[] contentData)
        {
            Content content = new Content();
            content.StoryId = storyId;
            content.ContentTypeId = contentTypeId;
            content.ContentData = contentData;
            return content;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                if (_StoryId != value)
                {
                    OnStoryIdChanging(value);
                    ReportPropertyChanging("StoryId");
                    _StoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoryId");
                    OnStoryIdChanged();
                }
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentTypeId
        {
            get
            {
                return _ContentTypeId;
            }
            set
            {
                if (_ContentTypeId != value)
                {
                    OnContentTypeIdChanging(value);
                    ReportPropertyChanging("ContentTypeId");
                    _ContentTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentTypeId");
                    OnContentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ContentTypeId;
        partial void OnContentTypeIdChanging(global::System.Int32 value);
        partial void OnContentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ContentData
        {
            get
            {
                return StructuralObject.GetValidValue(_ContentData);
            }
            set
            {
                OnContentDataChanging(value);
                ReportPropertyChanging("ContentData");
                _ContentData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentData");
                OnContentDataChanged();
            }
        }
        private global::System.Byte[] _ContentData;
        partial void OnContentDataChanging(global::System.Byte[] value);
        partial void OnContentDataChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_Content_ContentType", "ContentType")]
        public ContentType ContentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentType>("StoryDBModel.fk_Content_ContentType", "ContentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentType>("StoryDBModel.fk_Content_ContentType", "ContentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContentType> ContentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentType>("StoryDBModel.fk_Content_ContentType", "ContentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContentType>("StoryDBModel.fk_Content_ContentType", "ContentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_Content_Story", "Story")]
        public Story Story
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_Content_Story", "Story").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_Content_Story", "Story").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Story> StoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_Content_Story", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Story>("StoryDBModel.fk_Content_Story", "Story", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="ContentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentType object.
        /// </summary>
        /// <param name="contentTypeId">Initial value of the ContentTypeId property.</param>
        /// <param name="contentTypeCode">Initial value of the ContentTypeCode property.</param>
        /// <param name="createBy">Initial value of the CreateBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static ContentType CreateContentType(global::System.Int32 contentTypeId, global::System.String contentTypeCode, global::System.String createBy, global::System.DateTime createDate)
        {
            ContentType contentType = new ContentType();
            contentType.ContentTypeId = contentTypeId;
            contentType.ContentTypeCode = contentTypeCode;
            contentType.CreateBy = createBy;
            contentType.CreateDate = createDate;
            return contentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentTypeId
        {
            get
            {
                return _ContentTypeId;
            }
            set
            {
                if (_ContentTypeId != value)
                {
                    OnContentTypeIdChanging(value);
                    ReportPropertyChanging("ContentTypeId");
                    _ContentTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentTypeId");
                    OnContentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ContentTypeId;
        partial void OnContentTypeIdChanging(global::System.Int32 value);
        partial void OnContentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentTypeCode
        {
            get
            {
                return _ContentTypeCode;
            }
            set
            {
                OnContentTypeCodeChanging(value);
                ReportPropertyChanging("ContentTypeCode");
                _ContentTypeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentTypeCode");
                OnContentTypeCodeChanged();
            }
        }
        private global::System.String _ContentTypeCode;
        partial void OnContentTypeCodeChanging(global::System.String value);
        partial void OnContentTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentTypeMemeType
        {
            get
            {
                return _ContentTypeMemeType;
            }
            set
            {
                OnContentTypeMemeTypeChanging(value);
                ReportPropertyChanging("ContentTypeMemeType");
                _ContentTypeMemeType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentTypeMemeType");
                OnContentTypeMemeTypeChanged();
            }
        }
        private global::System.String _ContentTypeMemeType;
        partial void OnContentTypeMemeTypeChanging(global::System.String value);
        partial void OnContentTypeMemeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_Content_ContentType", "Content")]
        public EntityCollection<Content> Contents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Content>("StoryDBModel.fk_Content_ContentType", "Content");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Content>("StoryDBModel.fk_Content_ContentType", "Content", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="KeyWord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KeyWord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KeyWord object.
        /// </summary>
        /// <param name="keyWordId">Initial value of the KeyWordId property.</param>
        /// <param name="keyWordGroupId">Initial value of the KeyWordGroupId property.</param>
        /// <param name="keyWordValue">Initial value of the KeyWordValue property.</param>
        /// <param name="keyWordType">Initial value of the KeyWordType property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createtBy">Initial value of the CreatetBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="updateBy">Initial value of the UpdateBy property.</param>
        /// <param name="updateTime">Initial value of the UpdateTime property.</param>
        /// <param name="styleId">Initial value of the StyleId property.</param>
        public static KeyWord CreateKeyWord(global::System.Int32 keyWordId, global::System.Int32 keyWordGroupId, global::System.String keyWordValue, global::System.String keyWordType, global::System.Boolean enabled, global::System.String createtBy, global::System.DateTime createDate, global::System.String updateBy, global::System.DateTime updateTime, global::System.Int32 styleId)
        {
            KeyWord keyWord = new KeyWord();
            keyWord.KeyWordId = keyWordId;
            keyWord.KeyWordGroupId = keyWordGroupId;
            keyWord.KeyWordValue = keyWordValue;
            keyWord.KeyWordType = keyWordType;
            keyWord.Enabled = enabled;
            keyWord.CreatetBy = createtBy;
            keyWord.CreateDate = createDate;
            keyWord.UpdateBy = updateBy;
            keyWord.UpdateTime = updateTime;
            keyWord.StyleId = styleId;
            return keyWord;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyWordId
        {
            get
            {
                return _KeyWordId;
            }
            set
            {
                if (_KeyWordId != value)
                {
                    OnKeyWordIdChanging(value);
                    ReportPropertyChanging("KeyWordId");
                    _KeyWordId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyWordId");
                    OnKeyWordIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyWordId;
        partial void OnKeyWordIdChanging(global::System.Int32 value);
        partial void OnKeyWordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyWordGroupId
        {
            get
            {
                return _KeyWordGroupId;
            }
            set
            {
                OnKeyWordGroupIdChanging(value);
                ReportPropertyChanging("KeyWordGroupId");
                _KeyWordGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeyWordGroupId");
                OnKeyWordGroupIdChanged();
            }
        }
        private global::System.Int32 _KeyWordGroupId;
        partial void OnKeyWordGroupIdChanging(global::System.Int32 value);
        partial void OnKeyWordGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KeyWordValue
        {
            get
            {
                return _KeyWordValue;
            }
            set
            {
                OnKeyWordValueChanging(value);
                ReportPropertyChanging("KeyWordValue");
                _KeyWordValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("KeyWordValue");
                OnKeyWordValueChanged();
            }
        }
        private global::System.String _KeyWordValue;
        partial void OnKeyWordValueChanging(global::System.String value);
        partial void OnKeyWordValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KeyWordType
        {
            get
            {
                return _KeyWordType;
            }
            set
            {
                OnKeyWordTypeChanging(value);
                ReportPropertyChanging("KeyWordType");
                _KeyWordType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("KeyWordType");
                OnKeyWordTypeChanged();
            }
        }
        private global::System.String _KeyWordType;
        partial void OnKeyWordTypeChanging(global::System.String value);
        partial void OnKeyWordTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatetBy
        {
            get
            {
                return _CreatetBy;
            }
            set
            {
                OnCreatetByChanging(value);
                ReportPropertyChanging("CreatetBy");
                _CreatetBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatetBy");
                OnCreatetByChanged();
            }
        }
        private global::System.String _CreatetBy;
        partial void OnCreatetByChanging(global::System.String value);
        partial void OnCreatetByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private global::System.String _UpdateBy;
        partial void OnUpdateByChanging(global::System.String value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private global::System.DateTime _UpdateTime;
        partial void OnUpdateTimeChanging(global::System.DateTime value);
        partial void OnUpdateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StyleId
        {
            get
            {
                return _StyleId;
            }
            set
            {
                OnStyleIdChanging(value);
                ReportPropertyChanging("StyleId");
                _StyleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StyleId");
                OnStyleIdChanged();
            }
        }
        private global::System.Int32 _StyleId;
        partial void OnStyleIdChanging(global::System.Int32 value);
        partial void OnStyleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_KeyWord_KeyWordGroup", "KeyWordGroup")]
        public KeyWordGroup KeyWordGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyWordGroup>("StoryDBModel.fk_KeyWord_KeyWordGroup", "KeyWordGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyWordGroup>("StoryDBModel.fk_KeyWord_KeyWordGroup", "KeyWordGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<KeyWordGroup> KeyWordGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyWordGroup>("StoryDBModel.fk_KeyWord_KeyWordGroup", "KeyWordGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<KeyWordGroup>("StoryDBModel.fk_KeyWord_KeyWordGroup", "KeyWordGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_KeyWord_Style", "Style")]
        public Style Style
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Style>("StoryDBModel.fk_KeyWord_Style", "Style").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Style>("StoryDBModel.fk_KeyWord_Style", "Style").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Style> StyleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Style>("StoryDBModel.fk_KeyWord_Style", "Style");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Style>("StoryDBModel.fk_KeyWord_Style", "Style", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryKeyWord_KeyWord", "StoryKeyWord")]
        public EntityCollection<StoryKeyWord> StoryKeyWords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoryKeyWord>("StoryDBModel.fk_StoryKeyWord_KeyWord", "StoryKeyWord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoryKeyWord>("StoryDBModel.fk_StoryKeyWord_KeyWord", "StoryKeyWord", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="KeyWordGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KeyWordGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KeyWordGroup object.
        /// </summary>
        /// <param name="keyWordGroupId">Initial value of the KeyWordGroupId property.</param>
        /// <param name="keyWordGroupName">Initial value of the KeyWordGroupName property.</param>
        /// <param name="createBy">Initial value of the CreateBy property.</param>
        /// <param name="insertDate">Initial value of the InsertDate property.</param>
        /// <param name="updateBy">Initial value of the UpdateBy property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static KeyWordGroup CreateKeyWordGroup(global::System.Int32 keyWordGroupId, global::System.String keyWordGroupName, global::System.String createBy, global::System.DateTime insertDate, global::System.String updateBy, global::System.DateTime updateDate)
        {
            KeyWordGroup keyWordGroup = new KeyWordGroup();
            keyWordGroup.KeyWordGroupId = keyWordGroupId;
            keyWordGroup.KeyWordGroupName = keyWordGroupName;
            keyWordGroup.CreateBy = createBy;
            keyWordGroup.InsertDate = insertDate;
            keyWordGroup.UpdateBy = updateBy;
            keyWordGroup.UpdateDate = updateDate;
            return keyWordGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyWordGroupId
        {
            get
            {
                return _KeyWordGroupId;
            }
            set
            {
                if (_KeyWordGroupId != value)
                {
                    OnKeyWordGroupIdChanging(value);
                    ReportPropertyChanging("KeyWordGroupId");
                    _KeyWordGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyWordGroupId");
                    OnKeyWordGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyWordGroupId;
        partial void OnKeyWordGroupIdChanging(global::System.Int32 value);
        partial void OnKeyWordGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KeyWordGroupName
        {
            get
            {
                return _KeyWordGroupName;
            }
            set
            {
                OnKeyWordGroupNameChanging(value);
                ReportPropertyChanging("KeyWordGroupName");
                _KeyWordGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("KeyWordGroupName");
                OnKeyWordGroupNameChanged();
            }
        }
        private global::System.String _KeyWordGroupName;
        partial void OnKeyWordGroupNameChanging(global::System.String value);
        partial void OnKeyWordGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private global::System.DateTime _InsertDate;
        partial void OnInsertDateChanging(global::System.DateTime value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private global::System.String _UpdateBy;
        partial void OnUpdateByChanging(global::System.String value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_KeyWord_KeyWordGroup", "KeyWord")]
        public EntityCollection<KeyWord> KeyWords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KeyWord>("StoryDBModel.fk_KeyWord_KeyWordGroup", "KeyWord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KeyWord>("StoryDBModel.fk_KeyWord_KeyWordGroup", "KeyWord", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="Story")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Story : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Story object.
        /// </summary>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="storyName">Initial value of the StoryName property.</param>
        /// <param name="updateBy">Initial value of the UpdateBy property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="createBy">Initial value of the CreateBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Story CreateStory(global::System.Int32 storyId, global::System.String storyName, global::System.String updateBy, global::System.DateTime updateDate, global::System.String createBy, global::System.DateTime createDate)
        {
            Story story = new Story();
            story.StoryId = storyId;
            story.StoryName = storyName;
            story.UpdateBy = updateBy;
            story.UpdateDate = updateDate;
            story.CreateBy = createBy;
            story.CreateDate = createDate;
            return story;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                if (_StoryId != value)
                {
                    OnStoryIdChanging(value);
                    ReportPropertyChanging("StoryId");
                    _StoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoryId");
                    OnStoryIdChanged();
                }
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoryName
        {
            get
            {
                return _StoryName;
            }
            set
            {
                OnStoryNameChanging(value);
                ReportPropertyChanging("StoryName");
                _StoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StoryName");
                OnStoryNameChanged();
            }
        }
        private global::System.String _StoryName;
        partial void OnStoryNameChanging(global::System.String value);
        partial void OnStoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private global::System.String _UpdateBy;
        partial void OnUpdateByChanging(global::System.String value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_Content_Story", "Content")]
        public EntityCollection<Content> Contents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Content>("StoryDBModel.fk_Content_Story", "Content");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Content>("StoryDBModel.fk_Content_Story", "Content", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryCategory_Story", "StoryCategory")]
        public EntityCollection<StoryCategory> StoryCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoryCategory>("StoryDBModel.fk_StoryCategory_Story", "StoryCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoryCategory>("StoryDBModel.fk_StoryCategory_Story", "StoryCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryKeyWord_Story", "StoryKeyWord")]
        public EntityCollection<StoryKeyWord> StoryKeyWords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoryKeyWord>("StoryDBModel.fk_StoryKeyWord_Story", "StoryKeyWord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoryKeyWord>("StoryDBModel.fk_StoryKeyWord_Story", "StoryKeyWord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryTag_Story", "StoryTag")]
        public EntityCollection<StoryTag> StoryTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoryTag>("StoryDBModel.fk_StoryTag_Story", "StoryTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoryTag>("StoryDBModel.fk_StoryTag_Story", "StoryTag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="StoryCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoryCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoryCategory object.
        /// </summary>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="createBy">Initial value of the CreateBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static StoryCategory CreateStoryCategory(global::System.Int32 storyId, global::System.Int32 categoryId, global::System.String createBy, global::System.DateTime createDate)
        {
            StoryCategory storyCategory = new StoryCategory();
            storyCategory.StoryId = storyId;
            storyCategory.CategoryId = categoryId;
            storyCategory.CreateBy = createBy;
            storyCategory.CreateDate = createDate;
            return storyCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                if (_StoryId != value)
                {
                    OnStoryIdChanging(value);
                    ReportPropertyChanging("StoryId");
                    _StoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoryId");
                    OnStoryIdChanged();
                }
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryCategory_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("StoryDBModel.fk_StoryCategory_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("StoryDBModel.fk_StoryCategory_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("StoryDBModel.fk_StoryCategory_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("StoryDBModel.fk_StoryCategory_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryCategory_Story", "Story")]
        public Story Story
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_StoryCategory_Story", "Story").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_StoryCategory_Story", "Story").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Story> StoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_StoryCategory_Story", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Story>("StoryDBModel.fk_StoryCategory_Story", "Story", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="StoryKeyWord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoryKeyWord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoryKeyWord object.
        /// </summary>
        /// <param name="keyWordId">Initial value of the KeyWordId property.</param>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="storyKeyWordName">Initial value of the StoryKeyWordName property.</param>
        /// <param name="updateBy">Initial value of the UpdateBy property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="count">Initial value of the Count property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        public static StoryKeyWord CreateStoryKeyWord(global::System.Int32 keyWordId, global::System.Int32 storyId, global::System.String storyKeyWordName, global::System.String updateBy, global::System.DateTime updateDate, global::System.Int32 count, global::System.Int32 position)
        {
            StoryKeyWord storyKeyWord = new StoryKeyWord();
            storyKeyWord.KeyWordId = keyWordId;
            storyKeyWord.StoryId = storyId;
            storyKeyWord.StoryKeyWordName = storyKeyWordName;
            storyKeyWord.UpdateBy = updateBy;
            storyKeyWord.UpdateDate = updateDate;
            storyKeyWord.Count = count;
            storyKeyWord.Position = position;
            return storyKeyWord;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyWordId
        {
            get
            {
                return _KeyWordId;
            }
            set
            {
                if (_KeyWordId != value)
                {
                    OnKeyWordIdChanging(value);
                    ReportPropertyChanging("KeyWordId");
                    _KeyWordId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyWordId");
                    OnKeyWordIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyWordId;
        partial void OnKeyWordIdChanging(global::System.Int32 value);
        partial void OnKeyWordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                if (_StoryId != value)
                {
                    OnStoryIdChanging(value);
                    ReportPropertyChanging("StoryId");
                    _StoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoryId");
                    OnStoryIdChanged();
                }
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoryKeyWordName
        {
            get
            {
                return _StoryKeyWordName;
            }
            set
            {
                OnStoryKeyWordNameChanging(value);
                ReportPropertyChanging("StoryKeyWordName");
                _StoryKeyWordName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StoryKeyWordName");
                OnStoryKeyWordNameChanged();
            }
        }
        private global::System.String _StoryKeyWordName;
        partial void OnStoryKeyWordNameChanging(global::System.String value);
        partial void OnStoryKeyWordNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private global::System.String _UpdateBy;
        partial void OnUpdateByChanging(global::System.String value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryKeyWord_KeyWord", "KeyWord")]
        public KeyWord KeyWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyWord>("StoryDBModel.fk_StoryKeyWord_KeyWord", "KeyWord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyWord>("StoryDBModel.fk_StoryKeyWord_KeyWord", "KeyWord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<KeyWord> KeyWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyWord>("StoryDBModel.fk_StoryKeyWord_KeyWord", "KeyWord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<KeyWord>("StoryDBModel.fk_StoryKeyWord_KeyWord", "KeyWord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryKeyWord_Story", "Story")]
        public Story Story
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_StoryKeyWord_Story", "Story").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_StoryKeyWord_Story", "Story").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Story> StoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_StoryKeyWord_Story", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Story>("StoryDBModel.fk_StoryKeyWord_Story", "Story", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="StoryTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoryTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoryTag object.
        /// </summary>
        /// <param name="tagCode">Initial value of the TagCode property.</param>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="createBy">Initial value of the CreateBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static StoryTag CreateStoryTag(global::System.String tagCode, global::System.Int32 storyId, global::System.String createBy, global::System.DateTime createDate)
        {
            StoryTag storyTag = new StoryTag();
            storyTag.TagCode = tagCode;
            storyTag.StoryId = storyId;
            storyTag.CreateBy = createBy;
            storyTag.CreateDate = createDate;
            return storyTag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagCode
        {
            get
            {
                return _TagCode;
            }
            set
            {
                if (_TagCode != value)
                {
                    OnTagCodeChanging(value);
                    ReportPropertyChanging("TagCode");
                    _TagCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TagCode");
                    OnTagCodeChanged();
                }
            }
        }
        private global::System.String _TagCode;
        partial void OnTagCodeChanging(global::System.String value);
        partial void OnTagCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                if (_StoryId != value)
                {
                    OnStoryIdChanging(value);
                    ReportPropertyChanging("StoryId");
                    _StoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoryId");
                    OnStoryIdChanged();
                }
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryTag_Story", "Story")]
        public Story Story
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_StoryTag_Story", "Story").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_StoryTag_Story", "Story").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Story> StoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("StoryDBModel.fk_StoryTag_Story", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Story>("StoryDBModel.fk_StoryTag_Story", "Story", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryTag_Tag", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("StoryDBModel.fk_StoryTag_Tag", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("StoryDBModel.fk_StoryTag_Tag", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("StoryDBModel.fk_StoryTag_Tag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("StoryDBModel.fk_StoryTag_Tag", "Tag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="Style")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Style : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Style object.
        /// </summary>
        /// <param name="styleId">Initial value of the StyleId property.</param>
        /// <param name="styleName">Initial value of the StyleName property.</param>
        /// <param name="createBy">Initial value of the CreateBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="updateBy">Initial value of the UpdateBy property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="bold">Initial value of the Bold property.</param>
        /// <param name="italic">Initial value of the Italic property.</param>
        /// <param name="underLine">Initial value of the UnderLine property.</param>
        /// <param name="otherSetting">Initial value of the OtherSetting property.</param>
        public static Style CreateStyle(global::System.Int32 styleId, global::System.String styleName, global::System.String createBy, global::System.DateTime createDate, global::System.String updateBy, global::System.DateTime updateDate, global::System.Boolean bold, global::System.Boolean italic, global::System.Boolean underLine, global::System.String otherSetting)
        {
            Style style = new Style();
            style.StyleId = styleId;
            style.StyleName = styleName;
            style.CreateBy = createBy;
            style.CreateDate = createDate;
            style.UpdateBy = updateBy;
            style.UpdateDate = updateDate;
            style.Bold = bold;
            style.Italic = italic;
            style.UnderLine = underLine;
            style.OtherSetting = otherSetting;
            return style;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StyleId
        {
            get
            {
                return _StyleId;
            }
            set
            {
                if (_StyleId != value)
                {
                    OnStyleIdChanging(value);
                    ReportPropertyChanging("StyleId");
                    _StyleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StyleId");
                    OnStyleIdChanged();
                }
            }
        }
        private global::System.Int32 _StyleId;
        partial void OnStyleIdChanging(global::System.Int32 value);
        partial void OnStyleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StyleName
        {
            get
            {
                return _StyleName;
            }
            set
            {
                OnStyleNameChanging(value);
                ReportPropertyChanging("StyleName");
                _StyleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StyleName");
                OnStyleNameChanged();
            }
        }
        private global::System.String _StyleName;
        partial void OnStyleNameChanging(global::System.String value);
        partial void OnStyleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private global::System.String _UpdateBy;
        partial void OnUpdateByChanging(global::System.String value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Bold
        {
            get
            {
                return _Bold;
            }
            set
            {
                OnBoldChanging(value);
                ReportPropertyChanging("Bold");
                _Bold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bold");
                OnBoldChanged();
            }
        }
        private global::System.Boolean _Bold;
        partial void OnBoldChanging(global::System.Boolean value);
        partial void OnBoldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Italic
        {
            get
            {
                return _Italic;
            }
            set
            {
                OnItalicChanging(value);
                ReportPropertyChanging("Italic");
                _Italic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Italic");
                OnItalicChanged();
            }
        }
        private global::System.Boolean _Italic;
        partial void OnItalicChanging(global::System.Boolean value);
        partial void OnItalicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UnderLine
        {
            get
            {
                return _UnderLine;
            }
            set
            {
                OnUnderLineChanging(value);
                ReportPropertyChanging("UnderLine");
                _UnderLine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderLine");
                OnUnderLineChanged();
            }
        }
        private global::System.Boolean _UnderLine;
        partial void OnUnderLineChanging(global::System.Boolean value);
        partial void OnUnderLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ForeColor
        {
            get
            {
                return _ForeColor;
            }
            set
            {
                OnForeColorChanging(value);
                ReportPropertyChanging("ForeColor");
                _ForeColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ForeColor");
                OnForeColorChanged();
            }
        }
        private global::System.String _ForeColor;
        partial void OnForeColorChanging(global::System.String value);
        partial void OnForeColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackColor
        {
            get
            {
                return _BackColor;
            }
            set
            {
                OnBackColorChanging(value);
                ReportPropertyChanging("BackColor");
                _BackColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BackColor");
                OnBackColorChanged();
            }
        }
        private global::System.String _BackColor;
        partial void OnBackColorChanging(global::System.String value);
        partial void OnBackColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OtherSetting
        {
            get
            {
                return _OtherSetting;
            }
            set
            {
                OnOtherSettingChanging(value);
                ReportPropertyChanging("OtherSetting");
                _OtherSetting = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OtherSetting");
                OnOtherSettingChanged();
            }
        }
        private global::System.String _OtherSetting;
        partial void OnOtherSettingChanging(global::System.String value);
        partial void OnOtherSettingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_KeyWord_Style", "KeyWord")]
        public EntityCollection<KeyWord> KeyWords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KeyWord>("StoryDBModel.fk_KeyWord_Style", "KeyWord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KeyWord>("StoryDBModel.fk_KeyWord_Style", "KeyWord", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StoryDBModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="tagCode">Initial value of the TagCode property.</param>
        /// <param name="tagDescription">Initial value of the TagDescription property.</param>
        /// <param name="createBy">Initial value of the CreateBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Tag CreateTag(global::System.String tagCode, global::System.String tagDescription, global::System.String createBy, global::System.DateTime createDate)
        {
            Tag tag = new Tag();
            tag.TagCode = tagCode;
            tag.TagDescription = tagDescription;
            tag.CreateBy = createBy;
            tag.CreateDate = createDate;
            return tag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagCode
        {
            get
            {
                return _TagCode;
            }
            set
            {
                if (_TagCode != value)
                {
                    OnTagCodeChanging(value);
                    ReportPropertyChanging("TagCode");
                    _TagCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TagCode");
                    OnTagCodeChanged();
                }
            }
        }
        private global::System.String _TagCode;
        partial void OnTagCodeChanging(global::System.String value);
        partial void OnTagCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagDescription
        {
            get
            {
                return _TagDescription;
            }
            set
            {
                OnTagDescriptionChanging(value);
                ReportPropertyChanging("TagDescription");
                _TagDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagDescription");
                OnTagDescriptionChanged();
            }
        }
        private global::System.String _TagDescription;
        partial void OnTagDescriptionChanging(global::System.String value);
        partial void OnTagDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_CategoryTag_Tag", "CategoryTag")]
        public EntityCollection<CategoryTag> CategoryTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryTag>("StoryDBModel.fk_CategoryTag_Tag", "CategoryTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryTag>("StoryDBModel.fk_CategoryTag_Tag", "CategoryTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StoryDBModel", "fk_StoryTag_Tag", "StoryTag")]
        public EntityCollection<StoryTag> StoryTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoryTag>("StoryDBModel.fk_StoryTag_Tag", "StoryTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoryTag>("StoryDBModel.fk_StoryTag_Tag", "StoryTag", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
